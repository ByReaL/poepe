package byreal.apps.ipe.client.programs;

import java.util.List;

import com.google.gwt.core.client.GWT;
import com.google.gwt.event.shared.SimpleEventBus;
import com.google.gwt.user.client.rpc.AsyncCallback;
import com.sencha.gxt.cell.core.client.form.ComboBoxCell.TriggerAction;
import com.sencha.gxt.data.shared.LabelProvider;
import com.sencha.gxt.widget.core.client.Window;
import com.sencha.gxt.widget.core.client.form.SimpleComboBox;
import com.sencha.gxt.widget.core.client.info.Info;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.LinkedHashSet;
import java.util.List;

import com.google.gwt.cell.client.AbstractCell;
import com.google.gwt.cell.client.Cell.Context;
import com.google.gwt.core.client.GWT;
import com.google.gwt.dom.client.Element;
import com.google.gwt.event.logical.shared.BeforeSelectionEvent;
import com.google.gwt.event.logical.shared.BeforeSelectionHandler;
import com.google.gwt.event.logical.shared.SelectionEvent;
import com.google.gwt.event.logical.shared.SelectionHandler;
import com.google.gwt.event.shared.SimpleEventBus;
import com.google.gwt.i18n.client.NumberFormat;
import com.google.gwt.safecss.shared.SafeStyles;
import com.google.gwt.safecss.shared.SafeStylesUtils;
import com.google.gwt.safehtml.shared.SafeHtmlBuilder;
import com.google.gwt.user.client.Timer;
import com.google.gwt.user.client.rpc.AsyncCallback;
import com.google.gwt.user.client.ui.HasHorizontalAlignment;
import com.sencha.gxt.cell.core.client.ProgressBarCell;
import com.sencha.gxt.cell.core.client.ResizeCell;
import com.sencha.gxt.cell.core.client.form.CheckBoxCell;
import com.sencha.gxt.cell.core.client.form.ComboBoxCell;
import com.sencha.gxt.cell.core.client.form.ComboBoxCell.TriggerAction;
import com.sencha.gxt.core.client.IdentityValueProvider;
import com.sencha.gxt.core.client.Style.SelectionMode;
import com.sencha.gxt.core.client.util.Format;
import com.sencha.gxt.core.client.util.Margins;
import com.sencha.gxt.data.shared.LabelProvider;
import com.sencha.gxt.data.shared.ListStore;
import com.sencha.gxt.data.shared.ModelKeyProvider;
import com.sencha.gxt.theme.blue.client.tabs.BlueTabPanelBottomAppearance;
import com.sencha.gxt.widget.core.client.Dialog.PredefinedButton;
import com.sencha.gxt.widget.core.client.TabPanel;
import com.sencha.gxt.widget.core.client.TabPanel.TabPanelAppearance;
import com.sencha.gxt.widget.core.client.Window;
import com.sencha.gxt.widget.core.client.box.AlertMessageBox;
import com.sencha.gxt.widget.core.client.box.ConfirmMessageBox;
import com.sencha.gxt.widget.core.client.button.ButtonBar;
import com.sencha.gxt.widget.core.client.button.TextButton;
import com.sencha.gxt.widget.core.client.container.VerticalLayoutContainer;
import com.sencha.gxt.widget.core.client.container.VerticalLayoutContainer.VerticalLayoutData;
import com.sencha.gxt.widget.core.client.event.CellSelectionEvent;
import com.sencha.gxt.widget.core.client.event.ColumnWidthChangeEvent;
import com.sencha.gxt.widget.core.client.event.ColumnWidthChangeEvent.ColumnWidthChangeHandler;
import com.sencha.gxt.widget.core.client.event.DialogHideEvent;
import com.sencha.gxt.widget.core.client.event.DialogHideEvent.DialogHideHandler;
import com.sencha.gxt.widget.core.client.event.SelectEvent;
import com.sencha.gxt.widget.core.client.event.SelectEvent.SelectHandler;
import com.sencha.gxt.widget.core.client.event.ShowEvent;
import com.sencha.gxt.widget.core.client.event.ShowEvent.ShowHandler;
import com.sencha.gxt.widget.core.client.form.FieldLabel;
import com.sencha.gxt.widget.core.client.form.SimpleComboBox;
import com.sencha.gxt.widget.core.client.form.TextField;
import com.sencha.gxt.widget.core.client.form.validator.RegExValidator;
import com.sencha.gxt.widget.core.client.grid.CheckBoxSelectionModel;
import com.sencha.gxt.widget.core.client.grid.ColumnConfig;
import com.sencha.gxt.widget.core.client.grid.ColumnModel;
import com.sencha.gxt.widget.core.client.grid.Grid;
import com.sencha.gxt.widget.core.client.grid.HeaderGroupConfig;
import com.sencha.gxt.widget.core.client.info.Info;
import com.sencha.gxt.widget.core.client.menu.Item;
import com.sencha.gxt.widget.core.client.menu.Menu;
import com.sencha.gxt.widget.core.client.menu.MenuItem;
import com.sencha.gxt.widget.core.client.selection.SelectionChangedEvent;
import com.sencha.gxt.widget.core.client.selection.SelectionChangedEvent.SelectionChangedHandler;
import com.sencha.gxt.widget.core.client.toolbar.FillToolItem;
import com.sencha.gxt.widget.core.client.toolbar.SeparatorToolItem;
import com.sencha.gxt.widget.core.client.toolbar.ToolBar;
import com.sencha.gxt.core.client.util.Format;
import com.sencha.gxt.widget.core.client.box.AlertMessageBox;

import byreal.apps.ipe.client.IpeServiceAsync;
import byreal.apps.ipe.client.images.DesktopImages;

public class DataShow extends Window {
	
	//Create a remote service proxy to talk to the server-side Greeting service.
	private final IpeServiceAsync IPEService = GWT.create(byreal.apps.ipe.client.IpeService.class);

	public DataShow(final SimpleEventBus IPEEventBus) {
		
		/***********************************************************
		 * 
		 * Top ToolBar area
		 * 		
		 ***********************************************************/
		
		final SimpleComboBox<String> leagueCombobox  = new SimpleComboBox<String>(new LabelProvider<String>(){
			@Override
			public String getLabel(String item) {
				return item;
			}
		});



		leagueCombobox.setTriggerAction(TriggerAction.ALL);
		leagueCombobox.setSize("129px", "22px");
		leagueCombobox.setEmptyText("Select a league ...");
		
		IPEService.getTheLeagues(new AsyncCallback<List<String>>() {
			public void onFailure(Throwable caught) {
				Info.display("Error",caught.toString());
			}
			public void onSuccess(List<String> result) {
				for (int i = 0; i < result.size(); i++) {
					leagueCombobox.add(result.get(i).toString());
						leagueCombobox.setValue("Legacy");
				}
			}
		});
		
		ToolBar getStashToolBar = new ToolBar();
		ButtonBar buttonBar = new ButtonBar();
		TextField poeAccountNameTextField = new TextField();
		poeAccountNameTextField.setWidth(108);
		poeAccountNameTextField.setSize("129px", "22px");


		FieldLabel poeAccountNameLabel = new FieldLabel(poeAccountNameTextField, "POE Account Name");
		poeAccountNameLabel.setLabelPad(0);
		poeAccountNameLabel.setLabelSeparator(":");
		poeAccountNameLabel.setLabelWidth(105);

		final TextButton connectToChassisButton = new TextButton("Get Stash Data");
		connectToChassisButton.setIcon(DesktopImages.INSTANCE.scan_16());

		getStashToolBar.add(poeAccountNameLabel);
		getStashToolBar.add(leagueCombobox);
		getStashToolBar.add(connectToChassisButton);

		
		
		
		

		/***********************************************************
		 * 
		 * Border Layout area
		 * 		
		 ***********************************************************/	

		final VerticalLayoutContainer ixosRegressionVContainer = new VerticalLayoutContainer();

		ixosRegressionVContainer.add(getStashToolBar,  new VerticalLayoutData(1, -1, new Margins(0, 0, 0, 0)));
		ixosRegressionVContainer.add(poeStashGrid,  new VerticalLayoutData(1, 1, new Margins(0, 0, 0, 0)));

		/***********************************************************
		 * 
		 * The Window/Program area
		 * 		
		 ***********************************************************/			


		this.setClosable(true);
		this.setMaximizable(true);
		this.setMinimizable(true);
		this.setHeading("Item Price Estimator");
		this.getHeader().setIcon(DesktopImages.INSTANCE.estimator_16());
		this.add(ixosRegressionVContainer);
		
		
		
	}

}
